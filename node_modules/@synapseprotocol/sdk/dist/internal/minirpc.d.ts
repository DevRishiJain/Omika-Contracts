import type { ExternalProvider } from "@ethersproject/providers";
export declare class RequestError extends Error {
    readonly code: number;
    readonly data: any;
    constructor(message: string, code: number, data: any);
}
interface RPCRequest {
    method: string;
    params?: Array<any>;
}
export declare class MiniRpcProvider implements ExternalProvider {
    readonly isMetaMask: boolean;
    readonly chainId: number;
    private _url;
    private _host;
    private _path;
    protected _batchInterval: number;
    private _nextId;
    private _batchAggregator;
    private _pendingBatch;
    constructor(chainId: number, url: string, batchWaitTimeMs?: number);
    /**
     * Amount of time, in milliseconds, between batch RPC calls
     */
    get batchInterval(): number;
    get url(): string;
    get host(): string;
    get path(): string;
    request(request: RPCRequest): Promise<any>;
    private _processBatch;
}
export {};
