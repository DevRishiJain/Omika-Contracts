import { ContractInterface } from "@ethersproject/contracts";
export declare namespace SynapseContracts {
    type abiAndAddress = {
        address: string;
        abi?: ContractInterface;
    };
    interface SynapseContractArgs {
        bridge: string;
        bridgeZap?: string;
        mainnet?: boolean;
    }
    export class SynapseContract {
        readonly bridge: abiAndAddress;
        readonly bridgeZap?: abiAndAddress;
        constructor({ bridge, bridgeZap, mainnet }: SynapseContractArgs);
        get bridgeAddress(): string;
        get bridgeZapAddress(): string;
    }
    export const Ethereum: SynapseContract;
    export const Optimism: SynapseContract;
    export const Cronos: SynapseContract;
    export const BSC: SynapseContract;
    export const Polygon: SynapseContract;
    export const Fantom: SynapseContract;
    export const Boba: SynapseContract;
    export const Metis: SynapseContract;
    export const Moonbeam: SynapseContract;
    export const Moonriver: SynapseContract;
    export const Arbitrum: SynapseContract;
    export const Avalanche: SynapseContract;
    export const Aurora: SynapseContract;
    export const Harmony: SynapseContract;
    export function contractsForChainId(chainId: number): SynapseContract;
    export {};
}
