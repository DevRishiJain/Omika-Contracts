import type { Token } from "../token";
import type { ID, Distinct } from "../internal/distinct";
export declare namespace Networks {
    interface NetworkArgs {
        name: string;
        chainId: number;
        chainCurrency: string;
    }
    export class Network implements Distinct {
        readonly id: ID;
        readonly name: string;
        readonly chainCurrency: string;
        readonly chainId: number;
        readonly tokens: Token[];
        readonly tokenAddresses: string[];
        constructor(args: NetworkArgs);
        /**
         * Returns true if the Bridge Zap contract for this network
         * is a L2BridgeZap contract.
         * Currently, Ethereum mainnet is the only network for which the
         * Bridge Zap contract is a NerveBridgeZap contract.
         */
        get zapIsL2BridgeZap(): boolean;
        /**
         * Returns true if the passed token is available on this network.
         * @param {Token} token A {@link Token} object.
         */
        supportsToken(token: Token): boolean;
    }
    export const ETH: Network;
    export const OPTIMISM: Network;
    export const CRONOS: Network;
    export const BSC: Network;
    export const POLYGON: Network;
    export const FANTOM: Network;
    export const BOBA: Network;
    export const METIS: Network;
    export const MOONBEAM: Network;
    export const MOONRIVER: Network;
    export const ARBITRUM: Network;
    export const AVALANCHE: Network;
    export const AURORA: Network;
    export const HARMONY: Network;
    export const networkName: (chainId: number) => string;
    export const fromChainId: (chainId: number) => Network;
    /**
     * Returns true if the passed network supports the passed token.
     * @param {Network | number} network Either a {@link Network} instance, or the Chain ID of a supported network.
     * @param {Token} token A {@link Token} object.
     */
    export const networkSupportsToken: (network: Network | number, token: Token) => boolean;
    export const supportedNetworks: () => Network[];
    export {};
}
export declare const supportedNetworks: () => Networks.Network[];
